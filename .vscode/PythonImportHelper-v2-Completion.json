[
    {
        "label": "BaseSettings",
        "importPath": "pydantic_settings",
        "description": "pydantic_settings",
        "isExtraImport": true,
        "detail": "pydantic_settings",
        "documentation": {}
    },
    {
        "label": "Field",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "Field",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "EmailStr",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "Field",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "EmailStr",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "init_beanie",
        "importPath": "beanie",
        "description": "beanie",
        "isExtraImport": true,
        "detail": "beanie",
        "documentation": {}
    },
    {
        "label": "Document",
        "importPath": "beanie",
        "description": "beanie",
        "isExtraImport": true,
        "detail": "beanie",
        "documentation": {}
    },
    {
        "label": "Indexed",
        "importPath": "beanie",
        "description": "beanie",
        "isExtraImport": true,
        "detail": "beanie",
        "documentation": {}
    },
    {
        "label": "AsyncIOMotorClient",
        "importPath": "motor.motor_asyncio",
        "description": "motor.motor_asyncio",
        "isExtraImport": true,
        "detail": "motor.motor_asyncio",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "app.config.settings",
        "description": "app.config.settings",
        "isExtraImport": true,
        "detail": "app.config.settings",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "app.config.settings",
        "description": "app.config.settings",
        "isExtraImport": true,
        "detail": "app.config.settings",
        "documentation": {}
    },
    {
        "label": "Users",
        "importPath": "app.models.user_model",
        "description": "app.models.user_model",
        "isExtraImport": true,
        "detail": "app.models.user_model",
        "documentation": {}
    },
    {
        "label": "Users",
        "importPath": "app.models.user_model",
        "description": "app.models.user_model",
        "isExtraImport": true,
        "detail": "app.models.user_model",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "UUID",
        "importPath": "uuid",
        "description": "uuid",
        "isExtraImport": true,
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "uuid4",
        "importPath": "uuid",
        "description": "uuid",
        "isExtraImport": true,
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "Annotated",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "UserRegistration",
        "importPath": "app.schemas.users",
        "description": "app.schemas.users",
        "isExtraImport": true,
        "detail": "app.schemas.users",
        "documentation": {}
    },
    {
        "label": "UserRegistration",
        "importPath": "app.schemas.users",
        "description": "app.schemas.users",
        "isExtraImport": true,
        "detail": "app.schemas.users",
        "documentation": {}
    },
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "FastAPI",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Request",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "users",
        "importPath": "app.operations",
        "description": "app.operations",
        "isExtraImport": true,
        "detail": "app.operations",
        "documentation": {}
    },
    {
        "label": "auth_router",
        "importPath": "app.routers.V1.auth",
        "description": "app.routers.V1.auth",
        "isExtraImport": true,
        "detail": "app.routers.V1.auth",
        "documentation": {}
    },
    {
        "label": "v1_routers",
        "importPath": "app.routers.V1",
        "description": "app.routers.V1",
        "isExtraImport": true,
        "detail": "app.routers.V1",
        "documentation": {}
    },
    {
        "label": "logging",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "logging",
        "description": "logging",
        "detail": "logging",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "pytest_asyncio",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pytest_asyncio",
        "description": "pytest_asyncio",
        "detail": "pytest_asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncClient",
        "importPath": "httpx",
        "description": "httpx",
        "isExtraImport": true,
        "detail": "httpx",
        "documentation": {}
    },
    {
        "label": "AsyncClient",
        "importPath": "httpx",
        "description": "httpx",
        "isExtraImport": true,
        "detail": "httpx",
        "documentation": {}
    },
    {
        "label": "app",
        "importPath": "app.main",
        "description": "app.main",
        "isExtraImport": true,
        "detail": "app.main",
        "documentation": {}
    },
    {
        "label": "LifespanManager",
        "importPath": "asgi_lifespan",
        "description": "asgi_lifespan",
        "isExtraImport": true,
        "detail": "asgi_lifespan",
        "documentation": {}
    },
    {
        "label": "get_db",
        "importPath": "app.database.db",
        "description": "app.database.db",
        "isExtraImport": true,
        "detail": "app.database.db",
        "documentation": {}
    },
    {
        "label": "pytest",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pytest",
        "description": "pytest",
        "detail": "pytest",
        "documentation": {}
    },
    {
        "label": "asynccontextmanager",
        "importPath": "contextlib",
        "description": "contextlib",
        "isExtraImport": true,
        "detail": "contextlib",
        "documentation": {}
    },
    {
        "label": "HTMLResponse",
        "importPath": "fastapi.responses",
        "description": "fastapi.responses",
        "isExtraImport": true,
        "detail": "fastapi.responses",
        "documentation": {}
    },
    {
        "label": "StaticFiles",
        "importPath": "fastapi.staticfiles",
        "description": "fastapi.staticfiles",
        "isExtraImport": true,
        "detail": "fastapi.staticfiles",
        "documentation": {}
    },
    {
        "label": "Jinja2Templates",
        "importPath": "fastapi.templating",
        "description": "fastapi.templating",
        "isExtraImport": true,
        "detail": "fastapi.templating",
        "documentation": {}
    },
    {
        "label": "CORSMiddleware",
        "importPath": "fastapi.middleware.cors",
        "description": "fastapi.middleware.cors",
        "isExtraImport": true,
        "detail": "fastapi.middleware.cors",
        "documentation": {}
    },
    {
        "label": "routes",
        "importPath": "app.routers",
        "description": "app.routers",
        "isExtraImport": true,
        "detail": "app.routers",
        "documentation": {}
    },
    {
        "label": "Settings",
        "kind": 6,
        "importPath": "app.config.settings",
        "description": "app.config.settings",
        "peekOfCode": "class Settings(BaseSettings):\n    \"\"\"get the data from the .env file\"\"\"\n    DB_URL: str = Field(validation_alias=\"DB_URL\")\n    DB_NAME: str = Field(validation_alias=\"DB_NAME\")\n    TEST_MODE: bool = Field(validate_alias=\"TEST_MODE\")\n    class Config:\n        env_file = \".env\"\n\"\"\" initialize the settings \"\"\"\nsettings = Settings()",
        "detail": "app.config.settings",
        "documentation": {}
    },
    {
        "label": "settings",
        "kind": 5,
        "importPath": "app.config.settings",
        "description": "app.config.settings",
        "peekOfCode": "settings = Settings()",
        "detail": "app.config.settings",
        "documentation": {}
    },
    {
        "label": "Users",
        "kind": 6,
        "importPath": "app.models.user_model",
        "description": "app.models.user_model",
        "peekOfCode": "class Users(Document):\n    id: UUID = Field(default_factory=uuid4)\n    name: str\n    email: Annotated[EmailStr, Indexed(unique=True)]\n    created: datetime = Field(default_factory=datetime.now)\n    class Settings:\n        name = \"users\"",
        "detail": "app.models.user_model",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "app.routers.V1.auth.auth_router",
        "description": "app.routers.V1.auth.auth_router",
        "peekOfCode": "router = APIRouter(prefix=\"/auth\", tags=[\"Authentication\"])\n@router.post(\"/register\")\nasync def register_user(user: UserRegistration):\n    \"\"\"create user endpoint\"\"\"\n    new_user = await users.create_user(user.model_dump())\n    return new_user",
        "detail": "app.routers.V1.auth.auth_router",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "app.routers.V1.v1_routers",
        "description": "app.routers.V1.v1_routers",
        "peekOfCode": "router = APIRouter()\n\"\"\" include auth routes \"\"\"\nrouter.include_router(auth_router.router)",
        "detail": "app.routers.V1.v1_routers",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "app.routers.routes",
        "description": "app.routers.routes",
        "peekOfCode": "router = APIRouter()\n\"\"\" include the v1 routes here \"\"\"\nrouter.include_router(v1_routers.router)",
        "detail": "app.routers.routes",
        "documentation": {}
    },
    {
        "label": "UserRegistration",
        "kind": 6,
        "importPath": "app.schemas.users",
        "description": "app.schemas.users",
        "peekOfCode": "class UserRegistration(BaseModel):\n    name: str = Field(title=\"Name\")\n    email: EmailStr = Field(title=\"Email\")",
        "detail": "app.schemas.users",
        "documentation": {}
    },
    {
        "label": "logger",
        "kind": 5,
        "importPath": "app.utils.logger",
        "description": "app.utils.logger",
        "peekOfCode": "logger = logging.getLogger()\n# create format\nformat = logging.Formatter(fmt=\"%(levelname)s: %(asctime)s - %(message)s\")\n# create handlers\nstream_handler = logging.StreamHandler(sys.stdout)\nfile_handler = logging.FileHandler(\"app.log\")\n# set formatter\nstream_handler.setFormatter(format)\nfile_handler.setFormatter(format)\n# add the handlers to the logger",
        "detail": "app.utils.logger",
        "documentation": {}
    },
    {
        "label": "format",
        "kind": 5,
        "importPath": "app.utils.logger",
        "description": "app.utils.logger",
        "peekOfCode": "format = logging.Formatter(fmt=\"%(levelname)s: %(asctime)s - %(message)s\")\n# create handlers\nstream_handler = logging.StreamHandler(sys.stdout)\nfile_handler = logging.FileHandler(\"app.log\")\n# set formatter\nstream_handler.setFormatter(format)\nfile_handler.setFormatter(format)\n# add the handlers to the logger\nlogger.handlers = [stream_handler, file_handler]\n# set level",
        "detail": "app.utils.logger",
        "documentation": {}
    },
    {
        "label": "stream_handler",
        "kind": 5,
        "importPath": "app.utils.logger",
        "description": "app.utils.logger",
        "peekOfCode": "stream_handler = logging.StreamHandler(sys.stdout)\nfile_handler = logging.FileHandler(\"app.log\")\n# set formatter\nstream_handler.setFormatter(format)\nfile_handler.setFormatter(format)\n# add the handlers to the logger\nlogger.handlers = [stream_handler, file_handler]\n# set level\nlogger.setLevel(logging.INFO)",
        "detail": "app.utils.logger",
        "documentation": {}
    },
    {
        "label": "file_handler",
        "kind": 5,
        "importPath": "app.utils.logger",
        "description": "app.utils.logger",
        "peekOfCode": "file_handler = logging.FileHandler(\"app.log\")\n# set formatter\nstream_handler.setFormatter(format)\nfile_handler.setFormatter(format)\n# add the handlers to the logger\nlogger.handlers = [stream_handler, file_handler]\n# set level\nlogger.setLevel(logging.INFO)",
        "detail": "app.utils.logger",
        "documentation": {}
    },
    {
        "label": "logger.handlers",
        "kind": 5,
        "importPath": "app.utils.logger",
        "description": "app.utils.logger",
        "peekOfCode": "logger.handlers = [stream_handler, file_handler]\n# set level\nlogger.setLevel(logging.INFO)",
        "detail": "app.utils.logger",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "app.main",
        "description": "app.main",
        "peekOfCode": "app = FastAPI(\n    title=\"Boilerplate\",\n    summary=\"Starting Place For FastApi Projects.\",\n    description=\"\"\"\n    # FastApi Boilerplate\n    \"\"\",\n    version=\"0.0.7\",\n    servers=[\n        {\n            \"url\": \"http://127.0.0.1:8000/api/v1\",",
        "detail": "app.main",
        "documentation": {}
    },
    {
        "label": "origins",
        "kind": 5,
        "importPath": "app.main",
        "description": "app.main",
        "peekOfCode": "origins = [\n    \"http://localhost\",\n    \"http://localhost:8080\",\n    \"http://localhost:3000\",\n    \"http://localhost:5173\",\n    \"http://127.0.0.1\",\n    \"http://127.0.0.1:8080\",\n    \"http://127.0.0.1:3000\",\n    \"http://127.0.0.1:5173\",\n]",
        "detail": "app.main",
        "documentation": {}
    },
    {
        "label": "templates",
        "kind": 5,
        "importPath": "app.main",
        "description": "app.main",
        "peekOfCode": "templates = Jinja2Templates(directory=\"app/templates\")\n@app.get(\"/\", response_class=HTMLResponse, include_in_schema=False)\nasync def root(request: Request):\n    \"\"\"set the root to show a html welcome page\"\"\"\n    return templates.TemplateResponse(request=request, name=\"index.html\")\n# include all the other api endpoints\napp.include_router(routes.router)",
        "detail": "app.main",
        "documentation": {}
    }
]